name: Build and push Docker Image and then deploy

on:
  push:
    branches:
      - "dev"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - name: Pull
        run: |
          cd ./Web
          docker pull -q ${{ secrets.DOCKER_HUB_USERNAME }}/gdbs_front:${GITHUB_REF_NAME}
      - name: Build
        run: |
          cd ./Web
          docker build --cache-from=${{ secrets.DOCKER_HUB_USERNAME }}/gdbs_front:${GITHUB_REF_NAME} -q -t ${{ secrets.DOCKER_HUB_USERNAME }}/gdbs_front:${GITHUB_REF_NAME} .
          docker push -q ${{ secrets.DOCKER_HUB_USERNAME }}/gdbs_front:${GITHUB_REF_NAME}
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh deployer@${{ secrets.SSH_HOST }} "cd ~/CI_CD/branches/${GITHUB_REF_NAME} && docker compose down && docker compose pull && docker compose up -d && exit"
      - name: cleanup images
        run: ssh deployer@${{ secrets.SSH_HOST }} "docker image prune -f && exit"
      - name: cleanup keys
        if: always()
        run: rm -rf ~/.ssh
